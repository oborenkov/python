# Практическое задание 3. «Списки и словари»
# Обновлено 22.05.2023


# 3.1[16]: Дан список целых чисел. Требуется вычислить, сколько раз встречается некоторое число X в этом списке.
# Пользователь вводит число X с клавиатуры. Список можно считать заданным.
# Если такого числа в списке нет - вывести -1.

# Примеры/Тесты:
# Input:   [10, 5, 7, 3, 3, 0, 5, 7, 2, 8], x = 3
# Output:  2


# x = int(input('введите число: '))
# list_numbers = [10, 5, 7, 3, 3, 0, 5, 7, 2, 8]
# print(list_numbers.count(x))

 



# (*) Усложнение. При выводе результата на экран воспользуйтесь тернарным оператором.

# 3.2[18]: Требуется найти в списке целых чисел самый близкий по величине элемент к заданному числу X. Пользователь вводит это число с клавиатуры, список можно считать заданным. Введенное число не обязательно содержится в списке.
# Если в списке несколько чисел "равноблизких" к заданному числу X, то выводим первое встретившееся.

# Примеры/Тесты:
# Input: [10, 5, 7, 3, 3, 2, 5, 7, 3, 8], X = 0
# Output: 2
# Input: [10, 5, 7, 3, 3, 2, 5, 7, 3, 8], X = 9
# Output: 10
# (*) Усложнение. Если в списке несколько чисел "равноблизких" к заданному числу X, выводим все числа в отсортированном виде (по возрастанию)

# a=list(map(int,input().split()))
# b=int(input())
# c=[]
# for i in a:
#     c.append(abs(b-i))
# d=c.index(min(c))
# print(a[d])


# 3.3[20]: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем слова. Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы и заранее известно какой алфавит надо использовать.

# Примеры/Тесты:
# Input:   ноутбук
# Output:  12

# Input:   notebook
# Output:  14
# (*) Примечание.
# Подумайте о том какие структуры данных здесь наиболее удобно использовать, чтобы просто проверять в какую группу попадает буква, а также просто накапливать сумму очков.

# eng = 'qwertyuiopasdfghjklzxcvbnm'

# rus = 'йцукенгшщзхъфывапролджэячсмитьбюё'

# list_English = {1:'AEIOULNSTR', 2:'DG', 3:'BCMP',
#                 4:'FHVWY', 5:"K" , 8:'JX', 10:'QZ'}
# list_Russian = {1:'АВЕИНОРСТ', 2:'ДКЛМПУ', 3:'БГЁЬЯ',
#                 4:'ЙЫ', 5:'ЖЗХЦЧ', 8:'ШЭЮ', 10:'ФШЪ'}

# word = input('Введите слово на русском или английском языке: ')

# if word[0].lower() in eng:
#     summa = 0
#     for letter in word:
#         for key, value in list_English.items():
#             if letter.upper() in value:
#                 summa += key
#     print(f'стоимость введенного английского слова = {summa}')
# else:
#     if word[0].lower() in rus:
#         summa = 0
#         for letter in word:

#             for key, value in list_Russian.items():
#                 if letter.upper() in value:
#                     summa += key
#     print(f'стоимость введенного русского слова = {summa}')



# Вы продлили срок сдачи задания до 9 июня, 10:00 +03:00 UTC
# Преподаватель ждет вашу работу, чтобы проверить ее и выставить оценку
